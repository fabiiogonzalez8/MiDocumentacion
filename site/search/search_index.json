{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a mi sitio web","text":"<p>Bienvenido a mi p\u00e1gina est\u00e1tica generada con MkDocs. Si quieres saber m\u00e1s puedes dirigirte a la secci\u00f3n Sobre m\u00ed</p>"},{"location":"#comandos","title":"Comandos:","text":"<p>Ejemplo de algunos comandos \u00fatiles de mkdocs</p> <ul> <li><code>mkdocs new [dir-name]</code> - Crear un nuevo sitio.</li> <li><code>mkdocs serve</code> - Iniciar el servidor de MkDocs.</li> <li><code>mkdocs build</code> - Compilar y construir el sitio de documentaci\u00f3n.</li> <li><code>mkdocs -h</code> - Muestra ayuda sore el comando MkDocs.</li> </ul>"},{"location":"#puedes-encontrarme-en","title":"Puedes encontrarme en:","text":"<p>GitHub</p> <p>LinkedIn</p>"},{"location":"OpenStack/","title":"Pr\u00e1ctica OpenStack","text":"<p>En esta ocasi\u00f3n vamos a ver como configurar un escenario de OpenStack el cual vamos a usar durante todo el curso. Este escenario est\u00e1 compuesto de 4 m\u00e1quinas: 2 instancias en OpenStack y dos contenedores LXC que se ejecutar\u00e1 en una de las instancias.</p> <p>El dominio ser\u00e1 un subdominio de <code>fabio.gonzalonazareno.org</code>. Finalmente tendremos:</p> <ul> <li>M\u00e1quina 1: Instancia en OpenStack con Debian 12 Bookworm que se llama <code>odin.fabio.gonzalonazareno.org</code>.</li> <li>M\u00e1quina 2: Instancia en OpenStack con Rocky Linux 9 que se llama <code>hela.fabio.gonzalonazareno.org</code>.</li> <li>M\u00e1quina 3: Contenedor LXC con Ubuntu 22.04 que se llama <code>thor.fabio.gonzalonazareno.org</code>.</li> <li>M\u00e1quina 4: Contenedor LXC con Ubuntu 22.04 que se llama <code>loki.fabio.gonzalonazareno.org</code>.</li> </ul>"},{"location":"OpenStack/#escenario","title":"Escenario","text":""},{"location":"OpenStack/#creacion-de-las-maquinas-en-openstack","title":"Creaci\u00f3n de las m\u00e1quinas en OpenStack","text":""},{"location":"OpenStack/#1-crea-un-nuevo-router-llamado-routerpractica-conectado-a-la-red-externa","title":"1. Crea un nuevo router llamado RouterPractica conectado a la red externa.","text":"<pre><code>openstack router create routerpractica\n</code></pre> <pre><code>openstack router set routerpractica --external-gateway ext-net\n</code></pre>"},{"location":"OpenStack/#2-crea-una-red-interna-que-se-llame-red-intra-de-tu_usuario-con-las-siguientes-caracteristicas","title":"2. Crea una red interna que se llame Red Intra de tu_usuario, con las siguientes caracter\u00edsticas:","text":"<ul> <li>Est\u00e1 conectada al router que has creado en el punto anterior.</li> <li>Direccionamiento: 10.0.200.0/24</li> <li>Con DHCP y DNS (<code>172.22.0.1</code>).</li> <li>La puerta de enlace de los dispositivos conectados a esta red ser\u00e1 el <code>10.0.200.1</code>.</li> </ul> <pre><code>openstack network create \"Red intra de fabio.gonzalez\"\n</code></pre> <pre><code>openstack subnet create --network \"Red intra de fabio.gonzalez\" --subnet-range 10.0.200.0/24 --dns-nameserver 172.22.0.1 --dhcp 172.22.0.1\n</code></pre> <p>Para especificar mi subred he usado el ID, ya que esta no tiene nombre</p> <pre><code>openstack router add subnet routerpractica ac1ee726-ddfd-464d-a7b4-e24a69149042\n</code></pre>"},{"location":"OpenStack/#3-crea-una-red-interna-que-se-llame-red-dmz-de-tu_usuario-con-las-siguientes-caracteristicas","title":"3. Crea una red interna que se llame Red DMZ de tu_usuario, con las siguientes caracter\u00edsticas:","text":"<ul> <li>Direccionamiento: 172.16.0.0/16</li> <li>Con DHCP y DNS (<code>172.22.0.1</code>).</li> <li>La puerta de enlace de los dispositivos conectados a esta red ser\u00e1 el <code>172.16.0.1</code>.</li> </ul> <pre><code>openstack network create \"Red DMZ de fabio.gonzalez\"\n</code></pre> <pre><code>openstack subnet create --network \"Red DMZ de fabio.gonzalez\" --subnet-range 172.16.0.0/16 --dns-nameserver 172.22.0.1 --dhcp 172.22.0.1\n</code></pre>"},{"location":"OpenStack/#4-las-dos-instancias-que-vamos-a-crear-se-van-a-configurar-con-cloud-init-de-la-siguiente-manera","title":"4. Las dos instancias que vamos a crear se van a configurar con <code>cloud-init</code> de la siguiente manera:","text":"<ul> <li>Deben actualizar los paquetes de la distribuci\u00f3n de la instancia.</li> <li>El dominio utilizado ser\u00e1 del tipo <code>tunombre.gonzalonazareno.org</code>. Por lo tanto en la configuraci\u00f3n con <code>cloud-init</code> habr\u00e1 que indicar el hostname y el FQDN.</li> <li>Se crear\u00e1n dos usuarios:</li> <li>Un usuario sin privilegios. Se puede llamar como quieras (pero el nombre ser\u00e1 el mismo en todas las m\u00e1quinas) y acceder\u00e1s a las m\u00e1quinas usando tu clave ssh privada.</li> <li>Un usuario <code>profesor</code>, que puede utilizar <code>sudo</code> sin contrase\u00f1a. Copia de las claves p\u00fablicas de todos los profesores en las instancias para que puedan acceder con el usuario <code>profesor</code>.</li> <li>Cambia la contrase\u00f1a al usuario <code>root</code>.</li> </ul>"},{"location":"OpenStack/#5-creacion-de-la-maquina1-odin","title":"5. Creaci\u00f3n de la m\u00e1quina1 (odin):","text":"<ul> <li>Crea una instancia sobre un volumen de 15Gb, usando una imagen de Debian 12 Bookworm. Elige el sabor <code>vol.medium</code>. Y configural\u00e1 con <code>cloud-init</code> como se ha indicado anteriormente.</li> </ul> <pre><code>openstack volume create --bootable --size 15 --image \"Debian 12 Bookworm\" odin\n</code></pre> <pre><code>openstack server create --flavor vol.medium \\\n--volume odin \\\n--security-group default \\\n--key-name \"Fabio Gonzalez del Valle\" \\\n--network \"Red intra de fabio.gonzalez\" \\\n--user-data cloud-config.yaml \\\nodin\n</code></pre> <ul> <li>Est\u00e1 instancia estar\u00e1 conectada a la red Red Intra de tu_usuario. Asigna a la instancia una IP flotante.</li> </ul> <pre><code>openstack floating ip create ext-net\n</code></pre> <pre><code>openstack server add floating ip odin 172.22.201.66\n</code></pre>"},{"location":"OpenStack/#6-configuracion-de-la-maquina1-odin","title":"6. Configuraci\u00f3n de la m\u00e1quina1 (odin):","text":"<ul> <li>Conecta la instancia a tu Red DMZ, as\u00edgnale la direcci\u00f3n <code>172.16.0.1</code> para que sea la puerta de enlace las m\u00e1quinas conectadas a esta red (recuerda que deber\u00e1s configurar la red de la instancia para que tome dicha configuraci\u00f3n).</li> </ul> <pre><code>openstack server add network odin \"Red DMZ de fabio.gonzalez\"\n</code></pre> <pre><code>openstack port create --network \"Red DMZ de fabio.gonzalez\" --fixed-ip ip-address=172.16.0.1 puerto-odin\n</code></pre> <pre><code>openstack server add port odin puerto-odin\n</code></pre> <ul> <li>Deshabilita la seguridad de los puertos en las dos interfaces de red para que funcione de manera adecuada el NAT.</li> </ul> <pre><code>openstack server remove security group odin default\n</code></pre> <pre><code>openstack port set --disable-port-security puerto-odin\n</code></pre> <pre><code>openstack port set --disable-port-security f01ff47d-90d0-49eb-9581-535ae67f69be\n</code></pre> <ul> <li>Configura de forma permanente la regla SNAT para que las m\u00e1quinas de la Red DMZ tengan acceso a internet.</li> </ul> <pre><code>sudo iptables -t nat -A POSTROUTING -s 172.16.0.0/16 -o ens3 -j MASQUERADE\n</code></pre> <p>Para hacer las reglas permanentes podemos meterlas en el fichero interfaces, pero en este caso no contamos con el, as\u00ed que lo que haremos ser\u00e1 descargar el paquete <code>iptables-persistent</code>. Si hemos creado la regla antes de la instalaci\u00f3n del paquete, esta regla ser\u00e1 guardada autom\u00e1ticamente.</p>"},{"location":"OpenStack/#7-creacion-de-la-maquina2-hela","title":"7. Creaci\u00f3n de la m\u00e1quina2 (hela):","text":"<ul> <li>Est\u00e1 instancia se conectar\u00e1 a la Red DMZ. Usando un puerto asigna a esta m\u00e1quina la direcci\u00f3n <code>172.16.0.200</code>.</li> </ul> <pre><code> openstack port create --network \"Red DMZ de fabio.gonzalez\" --fixed-ip ip-address=172.16.0.200 hela\n</code></pre> <ul> <li>Crea una instancia sobre un volumen de 15Gb, usando una imagen de Rocky Linux 9. Elige el sabor <code>vol.normal</code>. Y config\u00farala con <code>cloud-init</code> como se ha indicado anteriormente.</li> </ul> <pre><code> openstack volume create --bootable --size 15 --image \"Rocky Linux 9\" hela\n</code></pre> <pre><code>openstack server create --flavor vol.normal \\\n--volume hela \\\n--security-group default \\\n--key-name \"Fabio Gonzalez del Valle\" \\\n--network \"Red DMZ de fabio.gonzalez\" \\\n--port hela \\\n--user-data cloud-config-hela.yaml \\\nhela\n</code></pre> <ul> <li>Deshabilita la seguridad de los puertos en la interfaz de red para que funcione de manera adecuada el NAT.</li> </ul> <pre><code>openstack server remove security group hela default\n</code></pre> <pre><code>openstack port set --disable-port-security hela\n</code></pre> <ul> <li>Comprueba que tiene acceso a internet. Si no tiene acceso a internet, no se han actualizado los paquetes con cloud-init, hazlo posteriormente..</li> </ul> <p>En este punto de la pr\u00e1ctica, mi topolog\u00eda de red se encuentra de la siguiente manera:</p> <p></p>"},{"location":"OpenStack/#instalacion-de-los-contenedores","title":"Instalaci\u00f3n de los contenedores","text":"<p>En maquina1 vamos a crear dos contenedores en un red interna, para ello:</p> <ol> <li>Crea en m\u00e1quina1 (odin) un linux bridge llamado <code>br-intra</code> (no lo hagas con <code>virsh</code> ya que se configura una reglas de cortafuego muy estrictas) y asigna una direcci\u00f3n IP est\u00e1tica <code>192.168.0.1</code>. Esta ser\u00e1 la IP de m\u00e1quina1 (odin) conectada a este switch virtual y ser\u00e1 la puerta de enlace de los contenedores. Tienes que tener en cuenta que la imagen de Debian 12 Bookworm de OpenStack tiene netplan para la configuraci\u00f3n de las redes, por lo tanto tienes que configurar el bridge usando el fichero de configuraci\u00f3n de netplan, para ello te puede ser \u00fatil esta p\u00e1gina. No olvides poner la mtu a 1450 al crear el bridge.</li> <li>Instala LXC y crea dos contenedores con la distribuci\u00f3n Ubuntu 22.04. Estos contenedores ser\u00e1n la m\u00e1quina3 (thor) y la m\u00e1quina4 (loki).</li> <li>Configura de forma permanente la regla SNAT para que los contenedores tengan acceso a internet.</li> <li>Conecta los contenedores al bridge <code>br-intra</code> y config\u00faralo de forma est\u00e1tica con las siguientes direcciones: m\u00e1quina3 (thor) la <code>192.168.0.2</code> y m\u00e1quina4 (loki) la <code>192.168.0.3</code>. Su DNS ser\u00e1 el <code>172.22.0.1</code>.</li> <li>Para que la red de OpenStack funcione de forma adecuada las im\u00e1genes que usamos tienen configurado la mtu (Unidad m\u00e1xima de transferencia) a 1450 bytes. Tenemos que adecuar los contenedores a este tama\u00f1o de trama. Para ello introduce en la configuraci\u00f3n de los contenedores la l\u00ednea: <code>lxc.net.0.mtu = 1450</code>.</li> <li>Configura los contenedores para que se auto inicien al reiniciar la instancia.</li> <li>Los contenedores tendr\u00e1n caracter\u00edsticas parecidas a las instancias anteriormente:<ul> <li>Debes actualizar los paquetes de la distribuci\u00f3n instalada.</li> <li>El dominio utilizado ser\u00e1 del tipo <code>tunombre.gonzalonazareno.org</code>. Por lo tanto configura de manera adecuada el hostname y el FQDN.</li> <li>Para acceder a los contenedores vamos a usar ssh.</li> <li>Crea dos usuarios:<ul> <li>Un usuario sin privilegios. Se puede llamar como quieras (el nombre de usuario que usaste en las instancias) y acceder\u00e1s a los contenedores usando tu clave ssh privada.</li> <li>Un usuario <code>profesor</code>, que puede utilizar <code>sudo</code> sin contrase\u00f1a. Copia de las claves p\u00fablicas de todos los profesores en los contenedores para que puedan acceder con el usuario <code>profesor</code>.</li> </ul> </li> <li>Cambia la contrase\u00f1a al usuario <code>root</code>.</li> </ul> </li> </ol>"},{"location":"about/","title":"Sobre m\u00ed","text":"<p>Bienvenido</p> <p>El motivo de esta p\u00e1gina es educativo. Actualmente estoy cursando un C.F.G.S (Ciclo Formativo de Grado Superior)  en IES Gonzalo Nazareno.  Para la realizaci\u00f3n de esta p\u00e1gina he usado la herramienta Mkdocs, una herramienta de generaci\u00f3n de sitios  est\u00e1ticos la cual permite crear sitios web estructurados y visualmente atractivos para diferentes fines.</p> <p>MkDocs utiliza el lenguaje Markdown como formato principal para escribir contenido. Este es un lenguaje de  marcado ligero y sencillo de aprender que posteriormente es convertido a HTML.</p>"}]}